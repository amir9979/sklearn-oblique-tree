# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  windows_build_pymeshlab:
    name: Build sklearn-oblique-tree (Windows)
    runs-on: windows-latest
    strategy:
      matrix:
        pyversion: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup env variables
      id: envs
      run: |
        echo "name=VCINSTALLDIR::C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC" >> $GITHUB_ENV
        cd src\meshlab
        $var=(git rev-parse --short HEAD --version) | Out-String
        echo "::set-output name=meshlab_commit::$($var)"
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
    - name: Install Python ${{ matrix.pyversion }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyversion }}
    - name: Expand PATH for wget
      run: |
        echo "C:\msys64\usr\bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Cache MeshLab Build
      id: cache-meshlab-build
      uses: actions/cache@v2
      with:
        path: |
          src/build/distrib/pymeshlab/lib/
        key: ${{ runner.os }}-meshlab_build-${{steps.envs.outputs.meshlab_commit}}
    - name: Download external libraries
      if: steps.cache-meshlab-build.outputs.cache-hit != 'true'
      shell: bash
      run: |
        bash src/meshlab/scripts/${{ runner.os }}/0_download_ext.sh
    - name: Set build meshlab option
      shell: bash
      id: meshlab-build-option
      if: steps.cache-meshlab-build.outputs.cache-hit == 'true'
      run: |
        echo  ::set-output name=meshlab-build-option::"--no-build-meshlab"
    - name: Build sklearn-oblique-tree ${{ matrix.pyversion }}
      shell: bash
      run: |
        sh scripts/${{ runner.os }}/1_build.sh --nightly ${{steps.meshlab-build-option.outputs.meshlab-build-option}}
    - name: Deploy sklearn-oblique-tree ${{ matrix.pyversion }}
      shell: bash
      run: |
        sh scripts/${{ runner.os }}/2_deploy.sh
    - name: Build Wheel
      shell: bash
      run: |
       pip install wheel
       pip wheel . -w wheels/
    - name: Upload sklearn-oblique-tree_${{ runner.os }}_python${{ matrix.pyversion }}
      uses: actions/upload-artifact@v2
      with:
        name: sklearn-oblique-tree_${{ runner.os }}_python${{ matrix.pyversion }}
        path: sklearn-oblique-tree/
    - name: Upload wheel ${{ runner.os }} python ${{ matrix.pyversion }}
      uses: actions/upload-artifact@v2
      with:
        name: pymeshlab_whl_${{ runner.os }}_python${{ matrix.pyversion }}
        path: wheels/pymeshlab*.whl
